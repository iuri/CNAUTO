ad_library {

    CN Spreasheet API
    
    @author Iuri Sampaio (iuri.sampaio.iurix.com)
    @creation-date 2011-09-18

}

namespace eval cn_spreadsheet {}
namespace eval cn_spreadsheet::fields {}
namespace eval cn_spreadsheet::data {}
namespace eval cn_spreadsheet::elements {}
namespace eval cn_spreadsheet::items {}



ad_proc -public cn_spreadsheet::new {
	{-spreadsheet_id "null"}
	{-name:required}
	{-description:required}
	{-tmp_file:required}
} {
    create new spreadsheet
} {
    set package_id [ad_conn package_id]
    set creation_user [ad_conn user_id]
    set creation_ip [ad_conn peeraddr]
		
    set spreadsheet_id [db_string create_spreadsheet {
	select spreadsheet__new (
				 :spreadsheet_id,	-- spreadsheet_id
				 :name,			-- name
				 :description,		-- description
				 :package_id,		-- package_id
				 now(), 		-- creation_date
				 :creation_user,	-- creation_user
				 :creation_ip, 		-- creation_ip
				 :package_id		-- context_id
				 )
    }]
    
    spreadsheet::import_csv -spreadsheet_id $spreadsheet_id -tmp_file $tmp_file
    return $spreadsheet_id
}





ad_proc -public cn_spreadsheet::import_csv {
    {-spreadsheet_id:required}
    {-tmp_file:required}
    {-update_p "0"}
} {
    Import CSV
} {

    if {$update_p} {
	cn_spreadshee::element::delete -spreadsheet_id $spreadsheet_id
	cn_spreadsheet::data::delete -spreadsheet_id $spreadsheet_id
    }

    set num 0
    oacs_util::csv_foreach -file $tmp_file -array_name row {
	
	if {$num == 0} {
	    set fields [array names row]
	    
	    # clean fields
	    set fields_names ""
	    set available_fields ""
	    set fields_to_delete ""
	    foreach field_name $fields {
		if {$field_name != "email" && $field_name != "name"} {
		    lappend fields_names $field_name
		}
	    }
	    set fields $fields_names
	    
	    foreach field_name $fields {
		set field_id($field_name) [cn_spreadsheet::fields::new -name $field_name -spreadsheet_id $spreadsheet_id]
		lappend available_fields $field_id($field_name)
	    }
	    
	    set available_fields_list_sql [join $available_fields ","]
	    if {$available_fields_list_sql != ""} {
		set fields_to_delete [db_list get_list "select field_id from cn_spreadsheet_fields where spreadsheet_id = :spreadsheet_id and field_id not in ($available_fields_list_sql)"]
	    }
	    
	    foreach field_to_delete $fields_to_delete {
		cn_spreadsheet::fields::delete -field_id $field_to_delete
	    }
	}
	
	
	if {![exists_and_not_null row(name)]} {
	    set row(name) $row(email)
	}
	
	cn_spreadsheet::email::new -name $row(name) -email $row(email) -spreadsheet_id $newsletter_id
	foreach field_name $fields {
	    cn_spreadsheet::data::new -field_id $field_id($field_name) -data $row($field_name) -email $row(email)
	}
	incr num
    }
        
    return $spreadsheet_id
    
}	

