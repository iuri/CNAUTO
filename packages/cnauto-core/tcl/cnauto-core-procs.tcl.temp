

# /packages/cnauto-core/tcl/cnauto-core-procs.tcl

ad_library {

    CNAuto Core core package procs

    @author Iuri Sampaio (iuri.sampaio@iurix.com)
    @creation-date 2011-11-04

}

namespace eval cnauto_core {}


ad_proc -public cnauto_core::line_exists {
    {-items}
    {-line}
} {
    Checks if the record is  already in the list 
} {
    
    foreach item $items {
	#ns_log Notice "[lindex $line 3] | [lindex $item 3]"
	if {[string equal [lindex $line 3] [lindex $item 3]]} {
	    return 1
	}
    }
    
    return 0
}


ad_proc -public cnauto_core::format_output_line {
    {-line}
} {
    ns_log Notice "FORMAT LINE: $line"

    set contrato [format "%-18s" 0]
    set suplemento [format "%15d" 0]
    set tipomov [format "%1s" "I"]

    set numero [format "%-15s" [lindex $line 0]]
    set vigencia [format "%-16s" [lindex $line 1]]
    set renavam [format "%-30s" [lindex $line 2]]    	
    set desc [format "%-80s" [lindex $line 3]]
    set chassi [format "%-17s" [lindex $line 4]]
    
    ns_log Notice "${contrato}${suplemento}${chassi}${numero}${tipomov}${desc}${vigencia}${renavam}\r"
    
    return "${contrato}${suplemento}${chassi}${numero}${tipomov}${desc}${vigencia}${renavam}\r"

}




ad_proc -public cnauto_core::mount_output_line {
    {-line} 
} {
    Format the output line to insert within the file
} {
    
    set elements [split $line {;}]
        
    set i 0
    foreach element $elements {
	switch $i {
            0 {
		#numero - chave do pedido( chave principal e unica do registro do cliente)
           
                lappend line [lindex $element 0]

	    1 { 
		# vigencia
		set date [split [lindex $element 0] {/}]
                set date1 "[lindex $date 2][lindex $date 1][lindex $date 0]"

                set date "[lindex $date 2]-[lindex $date 1]-[lindex $date 0]"
                set date2 [clock format [clock scan "1 year" -base [clock scan $date]] -format %Y%m%d]

		lappend line "${date1}${date2}"
	   	
	    }

	    2 {
	       
                # renavam 
		set renavam [lindex $element [expr [llength $element] - 1]]
		lappend line $renavam 

		#desc veic(Nome do usuario da assitencia) - renavam(sub-chave principal e unica do registro do cliente)
	        set desc [lreplace $element end-1 end]
                set desc [lreplace $desc 0 1]

                lappend line [join $desc ""]]
            }

	    3 {
		#chassi
		lappend line [lindex $element 0]
            }
	}
	
	incr i
    }

    
    set output_line [cnauto_core::format_output_line -line $line]
    
    return $output_line
}


ad_proc -public cnauto_core::export_csv_to_txt {
    {-input_file}
    {-output_file}
} {
    Export CSV file to TXT
} {

    ns_log Notice "Running ad_proc export_csv_to_txt"
    # Input File
    set input_file [open "${input_file}" r]
    set lines [split [read $input_file] \n]
    close $input_file
    
    # Output file
    set filename "[acs_root_dir]/www/${output_file}"
    set output_file [open "[acs_root_dir]/www/${output_file}" w]
    
    set items [list]
    set i 0
    
    foreach line $lines {
	ns_log Notice "LINE: $line"
	set output_line [mount_output_line -line $line]

	ns_log Notice "OUTPUT LINE: $output_line"
	#checks if the chassi already exists within the list "items"

	set exists_p [line_exists -items $items -line $output_line]
	ns_log Notice "EXISTS $exists_p"

	if {$exists_p == 0} {
	    
	    lappend items $output_line
	    
	    #inserts line within output file
	    puts $output_file $output_line    
	    incr i
	    ns_log Notice "Added $i"

	}
	set output_line ""
    }
    close $output_file

    ns_log Notice "$filename"
    ns_returnfile 200 "text/plain; charset=iso-8859-2" "$filename"
    
    return
    #ns_return 200 text/plain "$output_file" return
    
}



ad_proc -public cnauto_core::export_csv_to_txt_2 {
    {-input_file}
    {-output_file}
} {
    Export CSV file to TXT
} {

    ns_log Notice "Running ad_proc export_csv_to_txt"
    # Input File
    set input_file [open "${input_file}" r]
    set lines [split [read $input_file] \n]
    close $input_file
    
    # Output file
    set filename "[acs_root_dir]/www/${output_file}"
    set output_file [open "[acs_root_dir]/www/${output_file}" w]
    
    set items [list]
    set i 0
    
    foreach line $lines {
	ns_log Notice "LINE: $line"
	set output_line [format_input_line -line $line]

	ns_log Notice "OUTPUT LINE: $output_line"
	#checks if the chassi already exists within the list "items"

	set exists_p [line_exists -items $items -line $output_line]
	ns_log Notice "EXISTS $exists_p"

	if {$exists_p == 0} {
	    
	    lappend items $output_line
	    
	    #inserts line within output file
	    puts $output_file $output_line    
	    incr i
	    ns_log Notice "Added $i"

	}
	set output_line ""
    }
    close $output_file

    ns_log Notice "$filename"
    ns_returnfile 200 "text/plain; charset=iso-8859-2" "$filename"
    
    return
    #ns_return 200 text/plain "$output_file" return
    
}


